name: CI/CD Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-login:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build and push Docker image for login-microservice
      - name: Build and push Docker image for login-microservice
        run: |
          cd login-microservice  # Cambiar al directorio donde está el Dockerfile
          docker build -t alexismendozaa/login-microservice .
          docker push alexismendozaa/login-microservice:latest

      # 5. Copy RSA private key to the runner
      - name: Copy RSA private key to the runner
        run: echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/private_key.pem

      # 6. Verify the private key (added debugging step)
      - name: Verify the private key content
        run: cat /tmp/private_key.pem

      # 7. Set permissions for the private key
      - name: Set permissions for the private key
        run: chmod 600 /tmp/private_key.pem

      # 8. SSH to EC2 and deploy
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu  # Cambié el usuario a "ubuntu"
          key: /tmp/private_key.pem
          port: 22
          script: |
            # Agregar información para depurar
            echo "Verificando conexión SSH con EC2..."

            # Detén y elimina cualquier contenedor anterior
            docker stop login-microservice || true
            docker rm login-microservice || true

            # Pull del nuevo contenedor desde DockerHub
            docker pull alexismendozaa/login-microservice:latest

            # Ejecuta el contenedor (sin docker-compose)
            docker run -d -p 3000:3000 --name login-microservice alexismendozaa/login-microservice:latest

            # Confirmar ejecución
            echo "Despliegue completo. El contenedor está en ejecución."
